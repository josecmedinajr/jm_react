{"version":3,"sources":["images/JosePhotos.jpg","components/Navigation.js","components/Footer.js","pages/Home.js","pages/MyPortfolio.js","pages/ContactMe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Darkmode","showWidget","Navigation","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","sticky","Home","Container","fluid","Row","src","photos","alt","Col","Portfolio","Card","style","width","Img","variant","Body","Title","Text","Button","Contact","App","exact","path","component","MyPortfolio","ContactMe","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cc4e8096.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/JosePhotos.af76bc5d.jpg\";","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Darkmode from 'darkmode-js';\n\nnew Darkmode().showWidget();\n\nfunction Navigation () {\n    return (\n    <Navbar bg=\"light\" expand=\"lg\">\n    <Navbar.Brand href=\"#home\">José Carlos Medina</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"/\">Home</Nav.Link>\n        <Nav.Link href=\"/Portfolio\">Portfolio</Nav.Link>\n        <Nav.Link href=\"/contact\">Contact</Nav.Link>        \n      </Nav>     \n    </Navbar.Collapse>\n    </Navbar>  \n    )\n}\n\nexport default Navigation;","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Darkmode from 'darkmode-js';\n\nnew Darkmode().showWidget();\n \nfunction Footer() {\n    return (\n        <Navbar  sticky=\"bottom\" className=\"bottom\">\n          <Navbar.Brand href=\"#\" className=\"bottom\"> © 2020 José Carlos Medina</Navbar.Brand>\n        </Navbar>\n\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport photos from '../images/JosePhotos.jpg';\n// import Darkmode from 'darkmode-js';\n// new Darkmode().showWidget();\n\n\nfunction Home () {\n    return (\n       <div>\n         <Container fluid >      \n         <Row>\n         <img className=\"photos\" src={photos} alt=\"\"></img>  \n          </Row>         \n          <Row className=\"top-paragraph\"> \n          \n            <Col>\n              Hello I’m Jose!  I am a web developer who recently graduated from the University of Miami’s Full Stack Web Development Program. My goal is to design aesthetically pleasing and functional web apps. I have published large-scale web sites, such as the USTA Florida (United States Tennis Association) and the Miami Open Tennis tournament web site for many years.\n            </Col>\n          </Row>\n          <Row className=\"middle-paragraph\">\n            <Col>\n             I am excited to embark on a new career where I will combine my passion for the latest technologies along with my goal of helping people through the use of technology.\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              My motivation comes from my amazing family, my beautiful wife Lily, and our adorable daughter, Massiel. \n            </Col>\n          </Row>\n         </Container>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\n\n// import Darkmode from 'darkmode-js';\n\n// new Darkmode().showWidget();\n\n\nfunction Portfolio() {\n    return(\n     <div>\n       <h5>Please take a look at my Projects</h5>\n     <Container fluid>\n      <Row>\n      <Col>\n      <Card style={{ width: '18rem' }}>\n      <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n     <Card.Body>\n     <Card.Title>Card Title</Card.Title>\n     <Card.Text>\n      Some quick example text to build on the card title and make up the bulk of\n      the card's content.\n     </Card.Text>\n     <Button variant=\"primary\">Go somewhere</Button>\n     </Card.Body>\n     </Card>\n     </Col>\n\n     <Col>\n      <Card style={{ width: '18rem' }}>\n      <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n     <Card.Body>\n     <Card.Title>Card Title</Card.Title>\n     <Card.Text>\n      Some quick example text to build on the card title and make up the bulk of\n      the card's content.\n     </Card.Text>\n     <Button variant=\"primary\">Go somewhere</Button>\n     </Card.Body>\n     </Card>\n     </Col>\n\n     <Col>\n      <Card style={{ width: '18rem' }}>\n      <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n     <Card.Body>\n     <Card.Title>Card Title</Card.Title>\n     <Card.Text>\n      Some quick example text to build on the card title and make up the bulk of\n      the card's content.\n     </Card.Text>\n     <Button variant=\"primary\">Go somewhere</Button>\n     </Card.Body>\n     </Card>\n     </Col>\n\n     </Row>\n\n     <Row>\n      <Col>\n      <Card style={{ width: '18rem' }}>\n      <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n     <Card.Body>\n     <Card.Title>Card Title</Card.Title>\n     <Card.Text>\n      Some quick example text to build on the card title and make up the bulk of\n      the card's content.\n     </Card.Text>\n     <Button variant=\"primary\">Go somewhere</Button>\n     </Card.Body>\n     </Card>\n     </Col>\n\n     <Col>\n      <Card style={{ width: '18rem' }}>\n      <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n     <Card.Body>\n     <Card.Title>Card Title</Card.Title>\n     <Card.Text>\n      Some quick example text to build on the card title and make up the bulk of\n      the card's content.\n     </Card.Text>\n     <Button variant=\"primary\">Go somewhere</Button>\n     </Card.Body>\n     </Card>\n     </Col>\n\n     <Col>\n      <Card style={{ width: '18rem' }}>\n      <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n     <Card.Body>\n     <Card.Title>Card Title</Card.Title>\n     <Card.Text>\n      Some quick example text to build on the card title and make up the bulk of\n      the card's content.\n     </Card.Text>\n     <Button variant=\"primary\">Go somewhere</Button>\n     </Card.Body>\n     </Card>\n     </Col>\n\n     </Row>\n\n     </Container>\n        </div>\n    )\n}\n\nexport default Portfolio;","import React from 'react';\nimport Darkmode from 'darkmode-js';\nimport { Container } from 'react-bootstrap';\n\nnew Darkmode().showWidget();\n\nfunction Contact(){\n    return(\n        <div>\n            <Container fluid>\n            <h5>I'm available for projects, work and to play tennis also - please connect with me!</h5>\n            <h5>Email: jose.c.medina@me.com</h5>\n            <p>Follow me on GitHub: </p>\n            <p>Connect via LinkedIn: </p>\n            <p>View my Resume: </p>\n            <p>Follow me on Twitter: </p>\n            </Container>\n        </div>\n\n    )\n\n}\n\nexport default Contact;\n\n\n\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Navigation from './components/Navigation.js';\nimport Footer from './components/Footer.js';\nimport Home from './pages/Home.js';\nimport MyPortfolio from './pages/MyPortfolio.js';\nimport ContactMe from './pages/ContactMe.js';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import Darkmode from 'darkmode-js';\n// new Darkmode().showWidget();\n\nfunction App () {\n  return (\n    <Router>\n      <div>\n        <Navigation />\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/portfolio\" component={MyPortfolio} />\n        <Route exact path=\"/contact\" component={ContactMe} />\n      </div>\n      <Footer />\n    </Router>\n  )   \n}  \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}