{"version":3,"sources":["components/Navigation.js","components/Footer.js","pages/Home.js","pages/Portfolio.js","pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Darkmode","showWidget","Navigation","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","sticky","Home","Container","fluid","Row","Col","Portfolio","Contact","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qSAKA,IAAIA,KAAWC,aAkBAC,MAhBf,WACI,OACA,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MAC1B,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,SAAnB,yBACA,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,KAAf,QACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,cAAf,aACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,YAAf,gBCXR,IAAIP,KAAWC,aAWAc,MATf,WACI,OACI,kBAACZ,EAAA,EAAD,CAASa,OAAO,SAASH,UAAU,UACjC,kBAACV,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAAnB,gC,yBCNV,IAAIP,KAAWC,aA4BAgB,MAzBf,WACI,OACG,6BACE,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACf,kBAACC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,w1BAGI,6BACN,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,keAGI,6BACN,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,6SCpBZ,IAAIrB,KAAWC,aAWAqB,MARf,WACI,OACI,6BACI,4DCNZ,IAAItB,KAAWC,aAYAsB,MAVf,WACI,OACI,6BACI,6DCKZ,IAAIvB,KAAWC,aAmBAuB,MAjBf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWV,IACjC,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,aAAaC,UAAWL,IAC1C,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,WAAWC,UAAWJ,KAE1C,kBAAC,EAAD,QCZcK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.20ce4c17.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Darkmode from 'darkmode-js';\n\nnew Darkmode().showWidget();\n\nfunction Navigation () {\n    return (\n    <Navbar bg=\"light\" expand=\"lg\">\n    <Navbar.Brand href=\"#home\">José Carlos Medina</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"/\">Home</Nav.Link>\n        <Nav.Link href=\"/Portfolio\">Portfolio</Nav.Link>\n        <Nav.Link href=\"/contact\">Contact</Nav.Link>        \n      </Nav>     \n    </Navbar.Collapse>\n    </Navbar>  \n    )\n}\n\nexport default Navigation;","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Darkmode from 'darkmode-js';\n\nnew Darkmode().showWidget();\n \nfunction Footer() {\n    return (\n        <Navbar  sticky=\"bottom\" className=\"bottom\">\n          <Navbar.Brand href=\"#\">2020 José Carlos Medina</Navbar.Brand>\n        </Navbar>\n\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport Darkmode from 'darkmode-js';\n\nnew Darkmode().showWidget();\n\n\nfunction Home () {\n    return (\n       <div>\n         <Container fluid>\n          <Row>\n            \n            <Col>\n              Hello, my name is José C. Medina, Jr., I am a tech savvy Tennis and Marketing Professional. I have worked with numerous CMS (Content Management Systems) throughout the past 15 years. I worked for the USTA (United States Tennis Association) Florida Section for many years as the Web Site Coordinator and provided IT support as well. Throughout my tenure at the USTA I gained invaluable experience in the web publishing world. More recently, I have been the Web Editor of MiamiOpen.com for the Miami Open tennis tournament that is held yearly in March in the Miami area. I have been the editor for the Miami Open for the 2016, 2017, 2018 and 2019 tournaments. It has been a thrill to work in tennis which is my passion, along with managing the day-to-day publishing needs of one of the biggest and most important tennis tournaments in the world.\n            </Col>\n          </Row><br></br>\n          <Row>\n            <Col>\n              I'm bilingual, having been born in the Andes Mountains city of La Oroya, Perú. As you can imagine, I'm an avid tennis …and soccer fan. Let's go FC Barcelona, or as they say in Cataluña - Visca el Barça. Having been around the tennis industry for a while, I have met quite a few tennis playing professionals over the years. In fact, I'm an amateur sports action photographer, please visit my Instagram page to view my tennis images from different tournaments.\n            </Col>\n          </Row><br></br>\n          <Row>\n            <Col>\n              My motivation comes from my amazing family, my beautiful wife Lily, and our adorable daughter, Massiel. I decided to enroll in the University of Miami's Coding Boot Camp to gain deep knowledge of all the aspects of web development and will become a Full Stack Web Developer by June 2020.\n            </Col>\n          </Row>\n         </Container>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport Darkmode from 'darkmode-js';\n\nnew Darkmode().showWidget();\n\n\nfunction Portfolio() {\n    return(\n        <div>\n            <h5>Portfolio is coming soon!</h5>\n        </div>\n    )\n}\n\nexport default Portfolio;","import React from 'react';\nimport Darkmode from 'darkmode-js';\n\nnew Darkmode().showWidget();\n\nfunction Contact(){\n    return(\n        <div>\n            <h5>Contact me is coming soon!</h5>\n        </div>\n\n    )\n\n}\n\nexport default Contact;\n\n\n\n","import React from \"react\";\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Navigation from './components/Navigation.js';\nimport Footer from './components/Footer.js';\nimport Home from './pages/Home.js';\nimport Portfolio from './pages/Portfolio.js';\nimport Contact from './pages/Contact.js';\n\n\nimport Darkmode from 'darkmode-js';\n\n\nnew Darkmode().showWidget();\n\nfunction App () {\n  return (\n    <Router>\n      <div>\n        <Navigation />\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/portfolio\" component={Portfolio} />\n        <Route exact path=\"/contact\" component={Contact} />\n      </div>\n      <Footer />\n    </Router>\n  )   \n}\n    \n\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}